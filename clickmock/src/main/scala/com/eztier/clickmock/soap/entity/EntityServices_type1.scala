// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package com.eztier.clickmock.soap.entity


case class RootEntityType(svcSessionToken: Option[String] = None)
      


case class RootEntityTypeResponse(rootEntityTypeResult: Option[String] = None)
      


case class RootEntityTypeName(svcSessionToken: Option[String] = None)
      


case class RootEntityTypeNameResponse(rootEntityTypeNameResult: Option[String] = None)
      


case class GetTypeNames(svcSessionToken: Option[String] = None,
  sorted: Boolean)
      


case class GetTypeNamesResponse(getTypeNamesResult: Option[String] = None)
      


case class EntityTypeExists(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class EntityTypeExistsResponse(entityTypeExistsResult: Boolean)
      


case class GetEntityType(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class GetEntityTypeResponse(getEntityTypeResult: Option[String] = None)
      


case class GetEntityTypeForSourceControl(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class GetEntityTypeForSourceControlResponse(getEntityTypeForSourceControlResult: Option[String] = None)
      


case class GetEntityTypeReadable(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  readable: Boolean)
      


case class GetEntityTypeReadableResponse(getEntityTypeReadableResult: Option[String] = None)
      


case class EntityTypeHasSubtypes(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class EntityTypeHasSubtypesResponse(entityTypeHasSubtypesResult: Boolean)
      


case class SubtypesOfEntityType(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class SubtypesOfEntityTypeResponse(subtypesOfEntityTypeResult: Option[String] = None)
      


case class SubtypeNamesOfEntityType(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class SubtypeNamesOfEntityTypeResponse(subtypeNamesOfEntityTypeResult: Option[String] = None)
      


case class DeleteEntityType(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class DeleteEntityTypeResponse(deleteEntityTypeResult: Boolean)
      


case class DeleteEntityTypeEtAl(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class DeleteEntityTypeEtAlResponse()
      


case class CreateNewEntityType(svcSessionToken: Option[String] = None,
  xmlString: Option[String] = None)
      


case class CreateNewEntityTypeResponse(createNewEntityTypeResult: Option[String] = None)
      


case class CreateNewVersionOfEntityType(svcSessionToken: Option[String] = None,
  xmlString: Option[String] = None,
  migrateEntities: Boolean)
      


case class CreateNewVersionOfEntityTypeResponse(createNewVersionOfEntityTypeResult: Option[String] = None)
      


case class AddAttributeAndVersionType(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  xmlString: Option[String] = None)
      


case class AddAttributeAndVersionTypeResponse(addAttributeAndVersionTypeResult: Option[String] = None)
      


case class AddAttribute(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  xmlString: Option[String] = None)
      


case class AddAttributeResponse(addAttributeResult: Option[String] = None)
      


case class DeleteAttribute(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  attributeName: Option[String] = None)
      


case class DeleteAttributeResponse(deleteAttributeResult: Option[String] = None)
      


case class DropKeyFromAttribute(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  attrName: Option[String] = None,
  dropUniqueKeys: Boolean)
      


case class DropKeyFromAttributeResponse(dropKeyFromAttributeResult: Option[String] = None)
      


case class SetAttributeProperty(svcSessionToken: Option[String] = None,
  typeName: Option[String] = None,
  attributeName: Option[String] = None,
  propertyName: Option[String] = None,
  xmlValue: Option[String] = None)
      


case class SetAttributePropertyResponse(setAttributePropertyResult: Option[String] = None)
      


case class GetAttributeProperty(svcSessionToken: Option[String] = None,
  typeName: Option[String] = None,
  attributeName: Option[String] = None,
  propertyName: Option[String] = None)
      


case class GetAttributePropertyResponse(getAttributePropertyResult: Option[String] = None)
      


case class RedefineAttribute(svcSessionToken: Option[String] = None,
  typeName: Option[String] = None,
  xmlString: Option[String] = None)
      


case class RedefineAttributeResponse(redefineAttributeResult: Option[String] = None)
      


case class SetKeyAttribute(svcSessionToken: Option[String] = None,
  typeName: Option[String] = None,
  attrName: Option[String] = None,
  isKey: Boolean)
      


case class SetKeyAttributeResponse(setKeyAttributeResult: Boolean)
      


case class SetKeyAttributeAndMigrate(svcSessionToken: Option[String] = None,
  typeName: Option[String] = None,
  attrName: Option[String] = None,
  isKey: Boolean,
  migrate: Boolean)
      


case class SetKeyAttributeAndMigrateResponse(setKeyAttributeAndMigrateResult: Boolean)
      


case class MigrateAll(svcSessionToken: Option[String] = None,
  typeName: Option[String] = None,
  migrateSubtypes: Boolean)
      


case class MigrateAllResponse()
      


case class AddMethod(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  xmlString: Option[String] = None)
      


case class AddMethodResponse(addMethodResult: Option[String] = None)
      


case class RedefineMethod(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  xmlString: Option[String] = None)
      


case class RedefineMethodResponse(redefineMethodResult: Option[String] = None)
      


case class AddScriptMethod(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  scriptLanguage: Option[String] = None,
  methodBody: Option[String] = None)
      


case class AddScriptMethodResponse(addScriptMethodResult: Option[String] = None)
      


case class DeleteMethod(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  methodName: Option[String] = None)
      


case class DeleteMethodResponse(deleteMethodResult: Option[String] = None)
      


case class AddEvent(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  eventName: Option[String] = None)
      


case class AddEventResponse(addEventResult: Option[String] = None)
      


case class DeleteEvent(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  eventName: Option[String] = None)
      


case class DeleteEventResponse(deleteEventResult: Option[String] = None)
      


case class AllEntitiesOfType(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class AllEntitiesOfTypeResponse(allEntitiesOfTypeResult: Option[String] = None)
      


case class EntitiesOfType(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class EntitiesOfTypeResponse(entitiesOfTypeResult: Option[String] = None)
      


case class AllEntitiesOfVersionOfType(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  versionId: Int)
      


case class AllEntitiesOfVersionOfTypeResponse(allEntitiesOfVersionOfTypeResult: Option[String] = None)
      


case class GetEntityByID(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None)
      


case class GetEntityByIDResponse(getEntityByIDResult: Option[String] = None)
      


case class AllEntitiesOfTypeSnapshot(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class AllEntitiesOfTypeSnapshotResponse(allEntitiesOfTypeSnapshotResult: Option[String] = None)
      


case class GetPORefsFromSnapshot(svcSessionToken: Option[String] = None,
  snapshotID: Option[String] = None,
  start: Int,
  end: Int)
      


case class GetPORefsFromSnapshotResponse(getPORefsFromSnapshotResult: Option[com.eztier.clickmock.soap.entity.ArrayOfString] = None)
      


case class ArrayOfString(string: Seq[Option[String]] = Nil)
      


case class ReleaseSnapshot(svcSessionToken: Option[String] = None,
  snapshotID: Option[String] = None)
      


case class ReleaseSnapshotResponse()
      


case class GetXmlStringsOfOidStrings(svcSessionToken: Option[String] = None,
  poRefStrings: Option[com.eztier.clickmock.soap.entity.ArrayOfString] = None)
      


case class GetXmlStringsOfOidStringsResponse(getXmlStringsOfOidStringsResult: Option[com.eztier.clickmock.soap.entity.ArrayOfString] = None)
      


case class GetEntityByAttribute(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  attributeName: Option[String] = None,
  xmlValue: Option[String] = None)
      


case class GetEntityByAttributeResponse(getEntityByAttributeResult: Option[String] = None)
      


case class CreateEntity(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  xmlPropertiesString: Option[String] = None)
      


case class CreateEntityResponse(createEntityResult: Option[String] = None)
      


case class RedefineEntityByID(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None,
  xmlPropertiesString: Option[String] = None)
      


case class RedefineEntityByIDResponse(redefineEntityByIDResult: Option[String] = None)
      


case class RedefineEntityByID1(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None,
  xmlPropertiesString: Option[String] = None)
      


case class RedefineEntityByID1Response(redefineEntityByID1Result: Option[String] = None)
      


case class RedefineEntityByID2(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None,
  xmlPropertiesString: Option[String] = None)
      


case class RedefineEntityByID2Response(redefineEntityByID2Result: Option[String] = None)
      


case class RegisterEventByID(svcSessionToken: Option[String] = None,
  sourcePORefStr: Option[String] = None,
  targetPORefStr: Option[String] = None,
  eventName: Option[String] = None,
  methodName: Option[String] = None)
      


case class RegisterEventByIDResponse(registerEventByIDResult: Option[String] = None)
      


case class UnregisterEventByID(svcSessionToken: Option[String] = None,
  sourcePORefStr: Option[String] = None,
  targetPORefStr: Option[String] = None,
  eventName: Option[String] = None)
      


case class UnregisterEventByIDResponse(unregisterEventByIDResult: Option[String] = None)
      


case class RedefineEvent(svcSessionToken: Option[String] = None,
  typeName: Option[String] = None,
  xmlString: Option[String] = None)
      


case class RedefineEventResponse(redefineEventResult: Option[String] = None)
      


case class SetAttributeEntityByID(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None,
  attributeName: Option[String] = None,
  xmlAttributeValue: Option[String] = None)
      


case class SetAttributeEntityByIDResponse(setAttributeEntityByIDResult: Option[String] = None)
      


case class GetAttributeEntityByID(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None,
  attributeName: Option[String] = None)
      


case class GetAttributeEntityByIDResponse(getAttributeEntityByIDResult: Option[String] = None)
      


case class SetFormattedAttribute(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None,
  attributeName: Option[String] = None,
  formattedString: Option[String] = None)
      


case class SetFormattedAttributeResponse(setFormattedAttributeResult: Option[String] = None)
      


case class GetFormattedAttribute(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None,
  attributeName: Option[String] = None)
      


case class GetFormattedAttributeResponse(getFormattedAttributeResult: Option[String] = None)
      


case class RenderValue(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None,
  attributeName: Option[String] = None,
  xmlValue: Option[String] = None)
      


case class RenderValueResponse(renderValueResult: Option[String] = None)
      


case class InterpretValue(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None,
  attributeName: Option[String] = None,
  valueString: Option[String] = None)
      


case class InterpretValueResponse(interpretValueResult: Option[String] = None)
      


case class TriggerEventByID(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None,
  eventName: Option[String] = None)
      


case class TriggerEventByIDResponse()
      


case class InvokeInstanceMethod(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None,
  methodName: Option[String] = None,
  args: Option[com.eztier.clickmock.soap.entity.ArrayOfAnyType] = None)
      


case class ArrayOfAnyType(anyType: Seq[scalaxb.DataRecord[Option[Any]]] = Nil)
      


case class InvokeInstanceMethodResponse(invokeInstanceMethodResult: Option[scalaxb.DataRecord[Any]] = None)
      


case class InvokeTypeMethod(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  methodName: Option[String] = None,
  args: Option[com.eztier.clickmock.soap.entity.ArrayOfAnyType] = None)
      


case class InvokeTypeMethodResponse(invokeTypeMethodResult: Option[scalaxb.DataRecord[Any]] = None)
      


case class UnregisterEntityByID(svcSessionToken: Option[String] = None,
  poRefStr: Option[String] = None)
      


case class UnregisterEntityByIDResponse()
      


case class GetSupportedCurrencies(svcSessionToken: Option[String] = None)
      


case class GetSupportedCurrenciesResponse(getSupportedCurrenciesResult: Option[String] = None)
      


case class GetSupportedCurrencyFormats(svcSessionToken: Option[String] = None)
      


case class GetSupportedCurrencyFormatsResponse(getSupportedCurrencyFormatsResult: Option[String] = None)
      


case class LoadJavaClass(svcSessionToken: Option[String] = None,
  javaClassName: Option[String] = None,
  binaryClassData: Option[String] = None,
  binaryClassDataLength: Int,
  javaSource: Option[String] = None,
  rootPathName: Option[String] = None,
  replaceClassPath: Boolean,
  resetStoreCache: Boolean)
      


case class LoadJavaClassResponse()
      


case class LoadAssembly(svcSessionToken: Option[String] = None,
  assemblyName: Option[String] = None,
  assemblyData: Option[String] = None,
  assemblyDataLength: Int,
  assemblyPath: Option[String] = None,
  replace: Boolean,
  resetStoreCache: Boolean)
      


case class LoadAssemblyResponse()
      


case class GetExtentForSC(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None)
      


case class GetExtentForSCResponse(getExtentForSCResult: Option[String] = None)
      


case class SetExtentFromSC(svcSessionToken: Option[String] = None,
  entityTypeName: Option[String] = None,
  xml: Option[String] = None)
      


case class SetExtentFromSCResponse()
      


case class SetEntityAttributeValue(svcSessionToken: Option[String] = None,
  poRef: Option[String] = None,
  attributeName: Option[String] = None,
  valValue: Option[String] = None)
      


case class SetEntityAttributeValueResponse()
      


case class SetEntityTypeAttributeValue(svcSessionToken: Option[String] = None,
  typeName: Option[String] = None,
  attributeName: Option[String] = None,
  valValue: Option[String] = None)
      


case class SetEntityTypeAttributeValueResponse()
      


case class GetStorageList()
      


case class GetStorageListResponse(GetStorageListResult: Option[com.eztier.clickmock.soap.entity.ArrayOfString] = None)
      


case class Login(storeName: Option[String] = None,
  userName: Option[String] = None,
  password: Option[String] = None)
      


case class LoginResponse(LoginResult: Option[String] = None)
      


case class LoginAsWindowsIdentity(storeName: Option[String] = None)
      


case class LoginAsWindowsIdentityResponse(LoginAsWindowsIdentityResult: Option[String] = None)
      


case class Logoff(svcSessionToken: Option[String] = None)
      


case class LogoffResponse()
      


case class GetUserID(svcSessionToken: Option[String] = None)
      


case class GetUserIDResponse(GetUserIDResult: Option[String] = None)
      

